- hosts: master
  tasks:
           - name: yum repo
             yum_repository:
               name: Kubernetes
               baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
               enabled: 1
               gpgcheck: 1
               repo_gpgcheck: 1
               gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
               description: "kubernates yum"

           - name: install software
             yum:
               name: "{{ item }}"
               state: present
             loop:
                  - kubelet
                  - kubeadm
                  - kubectl
                  - docker
                  - iproute-tc  

           - name: Start service docker, if not started
             service:
                 name: "{{ item }}"
                 state: started
             loop:
                  - docker
                  - kubelet
         

           - name: setup docker driver
             copy:
                 content: {  "exec-opts": ["native.cgroupdriver=systemd"] }
                 dest: /etc/docker/daemon.json


           - name: Start service docker, if not started
             service:
                 name: docker
                 state: restarted

           - name: download images using kubeadm 
             command:
                 cmd: kubeadm config images pull  
           
           - name: start kubernates master in ip range
             command:
                 cmd: kubeadm init --pod-network-cidr=10.240.0.0/16  --ignore-preflight-errors=NumCPU  --ignore-preflight-errors=Mem        
           
           - name: copy file for client connection
             command:
                 cmd: mkdir -p $HOME/.kube
       
           - name: run second cmd       
             command:
                cmd: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

                # - name: run third cmd
                #command:
                #cmd: sudo chown $(id -u):$(id -g) $HOME/.kube/config

           - name: Change kubeconfig file permission
             file:
               path: $HOME/.kube/config
               owner: "{{ ansible_effective_user_id }}"
               group: "{{ ansible_effective_group_id }}"
               state: touch


           - name: for startiing master
             command:
                cmd: kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

           - name: create token
             command: 
                 cmd: kubeadm token create --print-join-command
             register: x

           - debug: 
                  var: x   



- hosts: workernode
  tasks:
           - name: yum repo
             yum_repository:
               name: Kubernetes
               baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
               enabled: 1
               gpgcheck: 1
               repo_gpgcheck: 1
               gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
               description: "kubernates yum"

           - name: install software
             yum:
               name: "{{ item }}"
               state: present
             loop:
                  - kubelet
                  - kubeadm
                  - kubectl
                  - docker
                  - iproute-tc  

           - name: Start service docker, if not started
             service:
                 name: "{{ item }}"
                 state: started
             loop:
                  - docker
                  - kubelet
         

           - name: setup docker driver
             copy:
                 content: {  "exec-opts": ["native.cgroupdriver=systemd"] }
                 dest: /etc/docker/daemon.json


           - name: Start service docker, if not started
             service:
                 name: docker
                 state: restarted

           - name: enable brizing
             copy:
                 content: "net.bridge.bridge-nf-call-ip6tables = 1 \nnet.bridge.bridge-nf-call-iptables = 1"
                 dest: /etc/sysctl.d/k8s.conf 

           - name: restart systel
             command:
                  cmd: sudo sysctl --system     


           - name: join workernode to master
             command:
                 cmd: x  

           - name: check status
             command:
                 cmd: systemctl status kubelet -l     
